{"version":3,"sources":["types/FilterBy.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","utils/filter.ts","index.tsx"],"names":["FilteredBy","TodoList","todos","setSelectedTodo","selectedTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","handleFilteredTodos","filterBy","onInput","query","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","name","App","setTodos","setFilterBy","setQuery","setloading","filteredTodos","useMemo","preparedTodos","filter","toLowerCase","includes","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"iLAAkBA,E,mECSLC,EAA4B,SAAC,GAInC,IAHLC,EAGI,EAHJA,MACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAEA,OACE,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,qBACE,UAAQ,OACRF,UAAU,GAFZ,UAKE,oBAAIA,UAAU,eAAd,SAA8BE,EAAKC,KACnC,oBAAIH,UAAU,eAAd,SACGE,EAAKE,WAEF,sBAAMJ,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAIrB,oBAAIA,UAAU,2BAAd,SACE,mBAAGA,UAAWK,IACZ,CACE,mBAAoBH,EAAKE,UACzB,mBAAoBF,EAAKE,YAH7B,SAOGF,EAAKI,UAGV,oBAAIN,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,WACPV,EAAgBI,IALpB,SAQE,sBAAMF,UAAU,OAAhB,SACE,mBACEA,UAAWK,IAAW,CACpB,aAAcH,EAAKC,MAAL,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAcI,IACxC,mBAAoBD,EAAKC,MAAL,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAcI,gBAnCnDD,EAAKC,c,SDlCJR,K,UAAAA,E,gBAAAA,E,uBAAAA,M,KESX,IAAMc,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,oBACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,MAEA,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOH,EACPI,SAAU,SAACC,GACTN,EAAoBM,EAAMC,OAAOH,QAJrC,UAOE,wBAAQA,MAAOnB,EAAWuB,IAA1B,iBAIA,wBAAQJ,MAAOnB,EAAWwB,OAA1B,oBAIA,wBAAQL,MAAOnB,EAAWyB,UAA1B,8BAON,oBAAGpB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRc,MAAOD,EACPE,SACE,SAACC,GACCJ,EAAQI,EAAMC,OAAOH,QAGzBP,KAAK,OACLP,UAAU,QACVqB,YAAY,cAEd,sBAAMrB,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAEda,GACC,sBAAMb,UAAU,gBAAgBsB,MAAO,CAAEC,cAAe,OAAxD,SAEE,wBACE,UAAQ,oBACRhB,KAAK,SACLP,UAAU,SACVQ,QAAS,kBAAMI,EAAQ,gBClDrC,SAASY,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,U,MAGd,ICrBMC,EAAmB,kBAC9B,qBAAKnC,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,uBCONoC,EAA6B,SAAC,GAGpC,IAFLrC,EAEI,EAFJA,aACAD,EACI,EADJA,gBAEA,EAAwBuC,mBAAsB,MAA9C,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAUA,OARAC,qBAAU,WFOW,IAACC,EENpBF,GAAW,GACU,OAAjB1C,IFKgB4C,EEJV5C,EAAa4C,OFIgBnB,EAAG,iBAAiBmB,KEJ5BZ,KAAKQ,GAC/BK,SAAQ,kBAAMH,GAAW,QAE7B,CAAC1C,IAGF,mCACE,sBAAKC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEdwC,EACG,cAAC,EAAD,IAEA,sBAAKxC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,gCAIYD,QAJZ,IAIYA,OAJZ,EAIYA,EAAcI,MAI1B,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS,kBAAMV,EAAgB,YAGnC,sBAAKE,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,gBACGD,QADH,IACGA,OADH,EACGA,EAAcO,QAGjB,oBAAGN,UAAU,QAAQ,UAAQ,aAA7B,UAEE,wBAAQA,UAAWK,IAAW,CAC5B,oBAAmB,OAACN,QAAD,IAACA,KAAcK,WAClC,0BAAoBL,QAApB,IAAoBA,OAApB,EAAoBA,EAAcK,YAFpC,SAKe,OAAZL,QAAY,IAAZA,KAAcK,UACX,OACA,YAGL,OAED,mBAAGyC,KAAK,2BAAR,gBACGP,QADH,IACGA,OADH,EACGA,EAAMQ,sB,OC1DpB,IAAMC,EAAgB,WAC3B,MAA0BV,mBAAiB,IAA3C,mBAAOxC,EAAP,KAAcmD,EAAd,KACA,EAAgCX,mBAAS1C,EAAWuB,KAApD,mBAAOP,EAAP,KAAiBsC,EAAjB,KACA,EAA0BZ,mBAAS,IAAnC,mBAAOxB,EAAP,KAAcqC,EAAd,KACA,EAAwCb,mBAAsB,MAA9D,mBAAOtC,EAAP,KAAqBD,EAArB,KACA,EAA8BuC,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBW,EAAhB,KAEAT,qBAAU,WACRS,GAAW,GHEe3B,EAAY,UGD3BO,KAAKiB,GACbJ,SAAQ,kBAAMO,GAAW,QAC3B,IAEH,IAAMC,EAAgBC,mBAAQ,WAC5B,OCzBG,SACLxD,EADK,GAGJ,IADCc,EACF,EADEA,SAAUE,EACZ,EADYA,MAERyC,EAAa,YAAOzD,GAUxB,MARiB,WAAbc,IACF2C,EAAgBzD,EAAM0D,QAAO,SAAArD,GAAI,OAAKA,EAAKE,cAG5B,cAAbO,IACF2C,EAAgBzD,EAAM0D,QAAO,SAAArD,GAAI,OAAIA,EAAKE,cAGxCS,EACKyC,EAAcC,QAAO,SAAArD,GAAI,OAAIA,EAAKI,MACtCkD,cACAC,SAAS5C,EAAM2C,kBAGbF,EDKEI,CAAiB7D,EAAO,CAAEc,WAAUE,YAC1C,CAAChB,EAAOc,EAAUE,IAErB,OACE,qCACE,qBAAKb,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CAAYU,oBAAqBuC,EAAatC,SAAUA,EAAUC,QAASsC,EAAUrC,MAAOA,MAG9F,qBAAKb,UAAU,QAAf,SAEIwC,EACI,cAAC,EAAD,IACA,cAAC,EAAD,CAAU3C,MAAOuD,EAAetD,gBAAiBA,EAAiBC,aAAcA,aAO7FA,GAAgB,cAAC,EAAD,CAAWA,aAAcA,EAAcD,gBAAiBA,QElD/E6D,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7d206ff3.chunk.js","sourcesContent":["export const enum FilteredBy {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>;\n  selectedTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setSelectedTodo,\n  selectedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed\n                && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  setSelectedTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames({\n                      'far fa-eye': todo.id !== selectedTodo?.id,\n                      'far fa-eye-slash': todo.id === selectedTodo?.id,\n                    })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { FilteredBy } from '../../types/FilterBy';\n\ntype Props = {\n  handleFilteredTodos: React.Dispatch<React.SetStateAction<FilteredBy>>;\n  filterBy: string;\n  onInput: React.Dispatch<React.SetStateAction<string>>;\n  query: string;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleFilteredTodos,\n  filterBy,\n  onInput,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterBy}\n            onChange={(event: React.ChangeEvent<HTMLSelectElement>) => {\n              handleFilteredTodos(event.target.value as FilteredBy);\n            }}\n          >\n            <option value={FilteredBy.ALL}>\n              All\n            </option>\n\n            <option value={FilteredBy.ACTIVE}>\n              Active\n            </option>\n\n            <option value={FilteredBy.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          value={query}\n          onChange={\n            (event) => {\n              onInput(event.target.value);\n            }\n          }\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => onInput('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo | null;\n  setSelectedTodo: React.Dispatch<React.SetStateAction<Todo | null>>\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (selectedTodo !== null) {\n      getUser(selectedTodo.userId).then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <>\n      <div className=\"modal is-active\" data-cy=\"modal\">\n        <div className=\"modal-background\" />\n\n        {loading\n          ? <Loader />\n          : (\n            <div className=\"modal-card\">\n              <header className=\"modal-card-head\">\n                <div\n                  className=\"modal-card-title has-text-weight-medium\"\n                  data-cy=\"modal-header\"\n                >\n                  {`Todo #${selectedTodo?.id}`}\n                </div>\n\n                {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                <button\n                  type=\"button\"\n                  className=\"delete\"\n                  data-cy=\"modal-close\"\n                  onClick={() => setSelectedTodo(null)}\n                />\n              </header>\n              <div className=\"modal-card-body\">\n                <p className=\"block\" data-cy=\"modal-title\">\n                  {selectedTodo?.title}\n                </p>\n\n                <p className=\"block\" data-cy=\"modal-user\">\n                  {/* <strong className=\"has-text-success\">Done</strong> */}\n                  <strong className={classNames({\n                    'has-text-danger': !selectedTodo?.completed,\n                    'has-text-success': selectedTodo?.completed,\n                  })}\n                  >\n                    {selectedTodo?.completed\n                      ? 'Done'\n                      : 'Planned'}\n                  </strong>\n\n                  {' by '}\n\n                  <a href=\"mailto:Sincere@april.biz\">\n                    {user?.name}\n                  </a>\n                </p>\n              </div>\n            </div>\n          )}\n      </div>\n    </>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getFilteredTodos } from './utils/filter';\nimport { FilteredBy } from './types/FilterBy';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filterBy, setFilterBy] = useState(FilteredBy.ALL);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [loading, setloading] = useState(false);\n\n  useEffect(() => {\n    setloading(true);\n    getTodos().then(setTodos)\n      .finally(() => setloading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return getFilteredTodos(todos, { filterBy, query });\n  }, [todos, filterBy, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleFilteredTodos={setFilterBy} filterBy={filterBy} onInput={setQuery} query={query} />\n            </div>\n\n            <div className=\"block\">\n              {\n                loading\n                  ? <Loader />\n                  : <TodoList todos={filteredTodos} setSelectedTodo={setSelectedTodo} selectedTodo={selectedTodo} />\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} setSelectedTodo={setSelectedTodo} />}\n    </>\n  );\n};\n","import { FilteredBy } from '../types/FilterBy';\nimport { Todo } from '../types/Todo';\n\nexport function getFilteredTodos(\n  todos: Todo[],\n  { filterBy, query }: { filterBy: FilteredBy, query: string },\n) {\n  let preparedTodos = [...todos];\n\n  if (filterBy === 'active') {\n    preparedTodos = todos.filter(todo => !todo.completed);\n  }\n\n  if (filterBy === 'completed') {\n    preparedTodos = todos.filter(todo => todo.completed);\n  }\n\n  if (query) {\n    return preparedTodos.filter(todo => todo.title\n      .toLowerCase()\n      .includes(query.toLowerCase()));\n  }\n\n  return preparedTodos;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}